@use "base";
@use "utilities";
@use "components";
@use "layout";
@use "abstracts" as *;

body {
	position: relative;
}

// container
.container {
	padding-block-end: 1rem;
}

// main
.main {
	display: grid;
	row-gap: 3rem;

	@include mq(medium) {
		grid-template-areas:
			"feature feature new"
			"feature feature new"
			"blog blog blog";
		column-gap: 1.5rem;
		.feature {
			grid-area: feature;
		}
		.new {
			grid-area: new;
		}
		.blog {
			grid-area: blog;
		}
	}
}

// header
.logo {
	width: 40px;
}
.nav {
	// display: none;
	@media (max-width: calc(45em - 1px)) {
		position: fixed; // i worked with absolute but the nav created overflow but fixed doesn't create it, and if want to work with absolute the solution is to add overflow: hidden to body and html the reason for that is the difference between absolute and fixed see chatgbt: https://chatgpt.com/share/673a4c3a-e678-8001-8272-1fe60b733f34
		inset: 0 0 0 30%;
		width: auto;
		// top: 0;
		// bottom: 0;
		// // left: 100px;
		// right: 0;
		// width: 70%;
		// height: 100vh;
		transform: translateX(100%);
		background-color: var(--neutral-000);
		flex-direction: column;
		padding-left: 1.5rem;
		padding-top: 8rem;
		--flex-row-gap: 1rem;
		transition: transform 0.5s ease-in-out;
	}

	// @include mq(medium) {
	// 	display: flex;
	// }
}

.nav-show {
	transform: translateX(0);
}

.nav-overlay {
	position: absolute;
	inset: 0;
	width: 100%;
	height: 100%;
	background-color: var(--neutral-300);
	opacity: 0.7;
	transition: all 0.5s ease-in-out;
}
.nav-close {
	display: none;
}

.nav-close.show {
	display: block;
	position: absolute;
	z-index: 1000;
	right: 20px;
	background-color: transparent;
}

.nav-toggle {
	@include mq(medium) {
		display: none;
	}
}

// feature section
.feature {
	display: grid;
	row-gap: 1.5rem;
	column-gap: 0.8rem;
	max-width: 670px;
	// --flow-spacer: 1rem;
	&__img {
		width: 100%;
		max-height: 400px;
		min-height: 250px;
		aspect-ratio: 1.14;
		background-size: cover;
		background-position: center center;
		background-image: url(/images/image-web-3-mobile.jpg);

		@include mq(medium) {
			background-image: url(/images/image-web-3-desktop.jpg);
			aspect-ratio: initial;
		}
	}

	&__title {
		font-weight: 800;
		padding-right: 1em;
	}

	&__description {
		display: grid;
		row-gap: 1rem;
		.read-more-btn {
			align-content: end;
		}
		.button {
			letter-spacing: 0.3em;
		}
	}

	@include mq(medium) {
		display: grid;
		grid-template-rows: 1fr auto;
		grid-template-columns: repeat(
			2,
			1fr
		); // im still not good at grid so first i didn't add this line because i thought grid areas are enough but the width of every child was auto so it created some reaction that i didn't want
		grid-template-areas:
			"img img"
			"title description";

		&__img {
			grid-area: img;
		}
		&__title {
			grid-area: title;
			padding-right: 0;
		}
		&__description {
			grid-area: description;
		}
	}
}

// New section
.new {
	--flow-spacer: 1.5rem;

	&__post {
		p {
			color: var(--neutral-100);
		}
		&:where(:not(:last-child)) {
			padding-block-end: 1.5rem;
			border-bottom: 1px solid var(--neutral-200);
		}

		a:hover {
			color: var(--primary-100);
		}
	}
}

// blog section
.blog {
	--flex-wrap: nowrap;

	// display: grid;
	// gap: 2rem;

	&__post {
		max-height: 182px;
	}

	&__picture {
		width: 33%;

		img {
			height: 100%;
			width: 100%;
		}
	}
	&__heading {
		width: 66%;
		display: grid;
		place-content: center;

		a {
			display: inline-block;
			margin-block: 0.8rem;

			&:is(:hover, :focus) {
				color: var(--primary-200);
			}
		}

		p {
			line-height: 1.8;
		}
	}
}
